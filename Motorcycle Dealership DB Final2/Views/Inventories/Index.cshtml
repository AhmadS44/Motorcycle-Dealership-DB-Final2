@model PaginatedList<Motorcycle_Dealership_DB_Final2.Models.Inventory>
@using Microsoft.AspNetCore.Identity
@using Motorcycle_Dealership_DB_Final2.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
}

<h1>Inventories</h1>


<p>
    <a asp-action="Create">Create New</a>

    <form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by model: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-secondary" /> |
            <a asp-action="Index">Refresh</a>
        </p>
    </div>
</form>

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ModelSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Model</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PhoneNumberSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">PhoneNumber</a>
            </th>
            <th>
                Email
            </th>
            <th>
                Function
            </th>
            <th>
                MotorcycleID
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Function)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.motorcycle.MotorcycleID)
            </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.InventoryID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.InventoryID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.InventoryID">Delete</a>
                    </td>
                }
            
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

